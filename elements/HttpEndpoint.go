// Code generated by kurento-go-generator. DO NOT EDIT.

package elements

import (
	"context"
	"fmt"

	"github.com/safermobility/kurento-go-next/v6"
	"github.com/safermobility/kurento-go-next/v6/core"
)

type IHttpEndpoint interface {
	GetUrl() (string, error)
}

// Endpoint that enables Kurento to work as an HTTP server, allowing peer HTTP clients to access media.
type HttpEndpoint struct {
	core.SessionEndpoint
}

type HttpEndpoint_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (HttpEndpoint_builder) GetTypeName() string {
	return "HttpEndpoint"
}

type HttpEndpointGetUrlParams struct {
}

func (HttpEndpointGetUrlParams) OperationName() string {
	return "getUrl"
}

// Obtains the URL associated to this endpoint
// Returns:
// // The url as a String
func (elem *HttpEndpoint) GetUrl(ctx context.Context) (string, error) {
	request := kurento.BuildInvoke(elem.Id, &HttpEndpointGetUrlParams{})

	// // The url as a String
	value, err := kurento.CallSimple[string](ctx, elem.GetConnection(), request)
	if err != nil {
		err = fmt.Errorf("rpc error: %w", err)
	}
	return value, err

}
